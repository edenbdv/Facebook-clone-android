// Generated by view binder compiler. Do not edit!
package com.example.foobar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foobar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnComment;

  @NonNull
  public final ImageButton btnEdit;

  @NonNull
  public final ImageButton btnLike;

  @NonNull
  public final ImageButton btnShare;

  @NonNull
  public final ImageButton btnTrash;

  @NonNull
  public final LinearLayout commentContainer;

  @NonNull
  public final ImageView imgViewLine;

  @NonNull
  public final LinearLayout likeContainer;

  @NonNull
  public final TextView name;

  @NonNull
  public final ImageView postPic;

  @NonNull
  public final TextView postText;

  @NonNull
  public final TextView postTime;

  @NonNull
  public final ImageView proPic;

  @NonNull
  public final RelativeLayout rellay1;

  @NonNull
  public final RelativeLayout rellay2;

  @NonNull
  public final LinearLayout shareContainer;

  @NonNull
  public final TextView tvComment;

  @NonNull
  public final TextView tvLike;

  @NonNull
  public final TextView tvShare;

  private PostItemBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton btnComment,
      @NonNull ImageButton btnEdit, @NonNull ImageButton btnLike, @NonNull ImageButton btnShare,
      @NonNull ImageButton btnTrash, @NonNull LinearLayout commentContainer,
      @NonNull ImageView imgViewLine, @NonNull LinearLayout likeContainer, @NonNull TextView name,
      @NonNull ImageView postPic, @NonNull TextView postText, @NonNull TextView postTime,
      @NonNull ImageView proPic, @NonNull RelativeLayout rellay1, @NonNull RelativeLayout rellay2,
      @NonNull LinearLayout shareContainer, @NonNull TextView tvComment, @NonNull TextView tvLike,
      @NonNull TextView tvShare) {
    this.rootView = rootView;
    this.btnComment = btnComment;
    this.btnEdit = btnEdit;
    this.btnLike = btnLike;
    this.btnShare = btnShare;
    this.btnTrash = btnTrash;
    this.commentContainer = commentContainer;
    this.imgViewLine = imgViewLine;
    this.likeContainer = likeContainer;
    this.name = name;
    this.postPic = postPic;
    this.postText = postText;
    this.postTime = postTime;
    this.proPic = proPic;
    this.rellay1 = rellay1;
    this.rellay2 = rellay2;
    this.shareContainer = shareContainer;
    this.tvComment = tvComment;
    this.tvLike = tvLike;
    this.tvShare = tvShare;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnComment;
      ImageButton btnComment = ViewBindings.findChildViewById(rootView, id);
      if (btnComment == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      ImageButton btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.btnLike;
      ImageButton btnLike = ViewBindings.findChildViewById(rootView, id);
      if (btnLike == null) {
        break missingId;
      }

      id = R.id.btnShare;
      ImageButton btnShare = ViewBindings.findChildViewById(rootView, id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.btnTrash;
      ImageButton btnTrash = ViewBindings.findChildViewById(rootView, id);
      if (btnTrash == null) {
        break missingId;
      }

      id = R.id.commentContainer;
      LinearLayout commentContainer = ViewBindings.findChildViewById(rootView, id);
      if (commentContainer == null) {
        break missingId;
      }

      id = R.id.imgView_line;
      ImageView imgViewLine = ViewBindings.findChildViewById(rootView, id);
      if (imgViewLine == null) {
        break missingId;
      }

      id = R.id.likeContainer;
      LinearLayout likeContainer = ViewBindings.findChildViewById(rootView, id);
      if (likeContainer == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.postPic;
      ImageView postPic = ViewBindings.findChildViewById(rootView, id);
      if (postPic == null) {
        break missingId;
      }

      id = R.id.post_text;
      TextView postText = ViewBindings.findChildViewById(rootView, id);
      if (postText == null) {
        break missingId;
      }

      id = R.id.post_time;
      TextView postTime = ViewBindings.findChildViewById(rootView, id);
      if (postTime == null) {
        break missingId;
      }

      id = R.id.proPic;
      ImageView proPic = ViewBindings.findChildViewById(rootView, id);
      if (proPic == null) {
        break missingId;
      }

      id = R.id.rellay1;
      RelativeLayout rellay1 = ViewBindings.findChildViewById(rootView, id);
      if (rellay1 == null) {
        break missingId;
      }

      id = R.id.rellay2;
      RelativeLayout rellay2 = ViewBindings.findChildViewById(rootView, id);
      if (rellay2 == null) {
        break missingId;
      }

      id = R.id.shareContainer;
      LinearLayout shareContainer = ViewBindings.findChildViewById(rootView, id);
      if (shareContainer == null) {
        break missingId;
      }

      id = R.id.tvComment;
      TextView tvComment = ViewBindings.findChildViewById(rootView, id);
      if (tvComment == null) {
        break missingId;
      }

      id = R.id.tvLike;
      TextView tvLike = ViewBindings.findChildViewById(rootView, id);
      if (tvLike == null) {
        break missingId;
      }

      id = R.id.tvShare;
      TextView tvShare = ViewBindings.findChildViewById(rootView, id);
      if (tvShare == null) {
        break missingId;
      }

      return new PostItemBinding((RelativeLayout) rootView, btnComment, btnEdit, btnLike, btnShare,
          btnTrash, commentContainer, imgViewLine, likeContainer, name, postPic, postText, postTime,
          proPic, rellay1, rellay2, shareContainer, tvComment, tvLike, tvShare);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
